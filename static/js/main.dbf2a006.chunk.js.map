{"version":3,"sources":["store.js","components/productList/ProductList.js","App.js","index.js"],"names":["productList","map","item","i","id","name","getProducts","state","getCurrentId","currentId","store","createStore","action","type","newProductList","currentItemIndex","findIndex","buffer","connect","dispatch","setCurrentId","moveUp","moveDown","selectedItemIndex","moveUpDisabled","moveDownDisabled","length","onClick","event","target","dataset","Number","useEffect","document","addEventListener","removeEventListener","className","key","data-id","Button","disabled","App","ReactDOM","render","getElementById"],"mappings":"k3BAEA,IAAMA,EAAc,CAAC,QAAS,QAAS,SAAU,YAAa,OAAQ,OAAQ,SAAU,QAAS,YAAa,OACzGC,KAAI,SAACC,EAAMC,GAAP,MAAc,CAACC,GAAID,EAAI,EAAGE,KAAMH,MAa5BI,EAAc,SAAAC,GAAK,OAAIA,EAAMP,aAC7BQ,EAAe,SAAAD,GAAK,OAAIA,EAAME,WA8C5BC,EAFDC,aAxCE,SAACJ,EAAOK,GACtB,OAAQA,EAAOC,MACb,IAjBiB,SAkBf,IAAMC,EAAc,YAAOP,EAAMP,aAC3Be,EAAmBD,EAAeE,WAAU,SAAAd,GAAI,OAAIA,EAAKE,KAAOG,EAAME,aACtEQ,EAASH,EAAeC,EAAmB,GAMjD,OAHAD,EAAeC,EAAmB,GAAKD,EAAeC,GACtDD,EAAeC,GAAoBE,EAE5B,EAAP,GACKV,EADL,CAEEP,YAAac,IAGjB,IA9BmB,WA+BjB,IAAMA,EAAc,YAAOP,EAAMP,aAC3Be,EAAmBD,EAAeE,WAAU,SAAAd,GAAI,OAAIA,EAAKE,KAAOG,EAAME,aACtEQ,EAASH,EAAeC,EAAmB,GAMjD,OAHAD,EAAeC,EAAmB,GAAKD,EAAeC,GACtDD,EAAeC,GAAoBE,EAE5B,EAAP,GACKV,EADL,CAEEP,YAAac,IAGjB,IA3CwB,eA4CtB,OAAO,EAAP,GACKP,EADL,CAEEE,UAAWG,EAAOH,YAEtB,QACE,OAAOF,KAIsB,CAAEP,cAAaS,UAAW,OCE9CS,eAXC,SAAAX,GAAK,MAAK,CACxBP,YAAaM,EAAYC,GACzBE,UAAWD,EAAaD,OAGP,SAAAY,GAAQ,MAAK,CAC9BC,aAAc,SAAChB,GAAD,OAAQe,ED7CmB,CAAEN,KALjB,eAK4CJ,UC6C1BL,KAC5CiB,OAAQ,kBAAMF,ED/Ca,CAAEN,KANV,YCsDnBS,SAAU,kBAAMH,EDjDa,CAAEN,KAJV,iBCwDRK,EAzDK,SAAC,GAAgE,IAA9DlB,EAA6D,EAA7DA,YAAaS,EAAgD,EAAhDA,UAAWW,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC7DC,EAAoBvB,EAAYgB,WAAU,SAAAd,GAAI,OAAIA,EAAKE,KAAOK,KAC9De,GAAkBD,IAAsBd,EACxCgB,EAAmBF,IAAsBvB,EAAY0B,OAAS,IAAMjB,EAEpEkB,EAAU,SAAAC,GAAU,IAChBC,EAAWD,EAAXC,OAEY,WAAhBA,EAAOhB,OAIPgB,EAAOC,QAAQ1B,GACjBgB,EAAaW,OAAOF,EAAOC,QAAQ1B,KAEnCgB,EAAa,QAUjB,OANAY,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASP,GAE5B,kBAAMM,SAASE,oBAAoB,QAASR,MAClD,IAGD,yBAAKS,UAAU,eACb,4BACGpC,EAAYC,KAAI,SAAAC,GAAI,OACnB,wBACEmC,IAAKnC,EAAKE,GACVkC,UAASpC,EAAKE,GACdgC,UAAW3B,IAAcP,EAAKE,GAAK,eAAiB,IAEnDF,EAAKG,UAIZ,6BACE,kBAACkC,EAAA,EAAD,CAAQZ,QAASN,EAAQmB,SAAUhB,GAAnC,WACA,kBAACe,EAAA,EAAD,CAAQZ,QAASL,EAAUkB,SAAUf,GAArC,kBClCOgB,MARf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,QCANM,IAASC,OACL,kBAAC,IAAD,CAAUjC,MAAOA,GACb,kBAAC,EAAD,OAEJuB,SAASW,eAAe,W","file":"static/js/main.dbf2a006.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nconst productList = ['Apple', 'Bread', 'Carrot', 'Dumplings', 'Eggs', 'Fish', 'Garlic', 'Honey', 'Ice cream', 'Jam']\n    .map((item, i) => ({id: i + 1, name: item }));\n\n// action types\nconst TYPE_MOVE_UP = 'MoveUp';\nconst TYPE_MOVE_DOWN = 'MoveDown';\nconst TYPE_SET_CURRENT_ID = 'SetCurrentId';\n\n// action creators\nexport const moveDown = () => ({ type: TYPE_MOVE_DOWN });\nexport const moveUp = () => ({ type: TYPE_MOVE_UP });\nexport const setCurrentId =  currentId => ({ type: TYPE_SET_CURRENT_ID, currentId });\n\n// selectors\nexport const getProducts = state => state.productList;\nexport const getCurrentId = state => state.currentId;\n\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case TYPE_MOVE_UP: {\n      const newProductList = [...state.productList];\n      const currentItemIndex = newProductList.findIndex(item => item.id === state.currentId);\n      const buffer = newProductList[currentItemIndex - 1];\n\n\n      newProductList[currentItemIndex - 1] = newProductList[currentItemIndex];\n      newProductList[currentItemIndex] = buffer;\n\n      return {\n        ...state,\n        productList: newProductList,\n      };\n    }\n    case TYPE_MOVE_DOWN: {\n      const newProductList = [...state.productList];\n      const currentItemIndex = newProductList.findIndex(item => item.id === state.currentId);\n      const buffer = newProductList[currentItemIndex + 1];\n\n\n      newProductList[currentItemIndex + 1] = newProductList[currentItemIndex];\n      newProductList[currentItemIndex] = buffer;\n\n      return {\n        ...state,\n        productList: newProductList,\n      };\n    }\n    case TYPE_SET_CURRENT_ID:\n      return {\n        ...state,\n        currentId: action.currentId,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, { productList, currentId: null });\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport './ProductList.css';\nimport { Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getProducts, getCurrentId, setCurrentId, moveUp, moveDown } from '../../store';\n\nconst ProductList = ({ productList, currentId, setCurrentId, moveUp, moveDown }) => {\n  const selectedItemIndex = productList.findIndex(item => item.id === currentId);\n  const moveUpDisabled = !selectedItemIndex || !currentId;\n  const moveDownDisabled = selectedItemIndex === productList.length - 1 || !currentId;\n\n  const onClick = event => {\n    const { target } = event;\n\n    if (target.type === 'submit') {\n      return;\n    }\n\n    if (target.dataset.id) {\n      setCurrentId(Number(target.dataset.id));\n    } else {\n      setCurrentId(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  return (\n    <div className=\"productList\">\n      <ul>\n        {productList.map(item => (\n          <li\n            key={item.id}\n            data-id={item.id}\n            className={currentId === item.id ? 'selectedItem' : ''}\n          >\n            {item.name}\n          </li>\n        ))}\n      </ul>\n      <div>\n        <Button onClick={moveUp} disabled={moveUpDisabled}>Move up</Button>\n        <Button onClick={moveDown} disabled={moveDownDisabled}>Move down</Button>\n      </div>\n    </div>\n  );\n};\n\nconst getDate = state => ({\n  productList: getProducts(state),\n  currentId: getCurrentId(state),\n});\n\nconst getMethods = dispatch => ({\n  setCurrentId: (id) => dispatch(setCurrentId(id)),\n  moveUp: () => dispatch(moveUp()),\n  moveDown: () => dispatch(moveDown()),\n});\n\nexport default connect(\n  getDate,\n  getMethods,\n)(ProductList);\n","import React from 'react';\nimport './App.css';\nimport ProductList from './components/productList/ProductList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}